- ingressFrom:
    identities:
    # GCP identity used to create the workspace
    # could be a user principal or a service account
    - user:bhavin.kukadia@databricks.com
    # - serviceAccount:sa1@project-name.iam.gserviceaccount.com
    sources:
    # when deploying a workspace outside of us-central1 (e.g. us-east4), 
    # the ingress policy at workspace creation needs to contain ingress allowance from
    # the regional control plane (e.g. us-east4 where your workspace is created), 
    # as well as Databricks us-central1 regional control plane. 
    - resource: projects/68422481410 #us-central1 control plane project
    - resource: projects/121886670913 #us-east4 control plane project
  ingressTo:
    operations:
    - methodSelectors:
      - method: '*'
      serviceName: container.googleapis.com
    - methodSelectors:
      - method: 'NetworksService.Get'
      - method: 'ProjectsService.Get'
      - method: 'SubnetworksService.Get'
      - method: 'ZonesService.List'
      - method: 'RegionsService.Get'
      serviceName: compute.googleapis.com
    - methodSelectors:
      - method: '*'
      serviceName: logging.googleapis.com
    - methodSelectors:
    # cloudresourcemanager api does not support method level filtering 
      - method: '*'
      serviceName: cloudresourcemanager.googleapis.com
    - methodSelectors:
    # iam api does not support method level filtering
      - method: '*'
      serviceName: iam.googleapis.com
    resources:
    # projects on which you would like to enforce this ingress policy
    # multiple entries could be added with addiotnal - projects/project_number entries
    # if you are using shared-vpc then we'll need project_number for host-project (shared-vpc) as well as the service project (databricks workspace)
    # host project provides the vpc and servcie project is where Databricks creates GKE cluster and Databricks related GCS storage accounts
    - projects/872269723794
- ingressFrom:
    identityType: ANY_SERVICE_ACCOUNT
    sources:
    # request originating from databricks control plane shard project
    - resource: projects/68422481410
  ingressTo:
    operations:
    - methodSelectors:
    # required to create DBFS related buckets
      - method: 'google.storage.buckets.create'
      - method: 'google.storage.buckets.testIamPermissions'
      serviceName: storage.googleapis.com
    # required to create the default k8s cluster used by databricks
    - methodSelectors:
    # container api does not support method level filtering
      - method: '*'
      serviceName: container.googleapis.com
    # block start
    # only required for databricks managed vpc based deployments
    # in this case databricks creates and manages vpc and hence we need these permissions
    # for bring your own vpc we do not need these permissions cause the vpc is pre-created by end user
    - methodSelectors:
      - method: 'NetworksService.Insert'
      - method: 'RegionOperationsService.Get'
      - method: 'GlobalOperationsService.Get'
      - method: 'RegionRoutersService.Insert'
      - method: 'SubnetworksService.Insert'
      - method: 'ZonesService.List'
      serviceName: compute.googleapis.com
      # block end
    resources:
    # projects on which you would like to enforce this ingress policy
    # multiple entries could be added with addiotnal - projects/project_number entries
    # if you are using shared-vpc then we'll need project_number for host-project (shared-vpc) as well as the service project (databricks workspace)
    # host project provides the vpc and servcie project is where Databricks creates GKE cluster and Databricks related GCS storage accounts
    - projects/872269723794