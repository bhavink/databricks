# Ingress rule for Databricks services
- ingressFrom:
    identityType: ANY_IDENTITY
    # Uncomment and use the following options as needed:
    # identities:
    #   - group:group_email
    #   - user:user_email
    #   - serviceAccount:serviceAccount_email
    #   - group:databricks-vpc-sc-ingress-group@databricks.com
    sources:
      # Databricks central project - only required at workspace creation (us-central1)
      - resource: projects/68422481410
      # Databricks regional control plane project (us-east4)
      - resource: projects/121886670913
      # Databricks regional unity catalog project (us-east4)
      - resource: projects/683414710976 
  ingressTo:
    operations:
      # Google Cloud Storage operations
      - methodSelectors:
          - method: google.storage.objects.create
          - method: google.storage.objects.get
          - method: google.storage.objects.list
          - method: google.storage.objects.delete
          - method: google.storage.buckets.testIamPermissions
          # The following permissions are required for DBFS storage creation
          # Remove these permissions after workspace is created
          - method: 'google.storage.buckets.create'
          - method: 'google.storage.buckets.testIamPermissions'
          - method: 'google.storage.buckets.get'
        serviceName: storage.googleapis.com
      # Compute Engine operations
      - methodSelectors:
          - method: RegionsService.Get
          - method: 'NetworksService.Get'
          - method: 'ProjectsService.Get'
          - method: 'RegionsService.Get'
          - method: 'SubnetworksService.Get'
          - method: 'ZonesService.Get'
          - method: 'RegionForwardingRulesService.Get'
          - method: 'SubnetworksService.GetPolicy'
        serviceName: compute.googleapis.com
      # Google Kubernetes Engine operations
      - methodSelectors:
          - method: '*'
        serviceName: container.googleapis.com
      # Container API operations (all methods, as method-level filtering is not supported)
      - methodSelectors:
          - method: '*'
        serviceName: container.googleapis.com
      # Cloud Logging operations
      - methodSelectors:
          - method: '*'
        serviceName: logging.googleapis.com
      # Cloud Resource Manager operations
      - methodSelectors:
          - method: '*' 
        serviceName: cloudresourcemanager.googleapis.com
      # IAM operations
      - methodSelectors:
          - method: 'IAM.CreateRole'
          - method: 'IAM.DeleteRole'
          - method: 'IAM.GetIamPolicy'
          - method: 'IAM.GetRole'
          - method: 'IAM.SetIamPolicy'
          - method: 'IAM.UpdateRole'
        serviceName: iam.googleapis.com
    resources:
      - projects/488622148875
      - projects/546577047680

# Ingress rule for specific user access
- ingressFrom:
    identities:
      # Allow a specific user to access services
      # This helps with debugging or using GCP console or CLI
      - user:user@example.com
    sources:
      - accessLevel: '*'
  ingressTo:
    operations:
      - serviceName: '*'
    resources:
      - projects/546577047680
      - projects/488622148875

# Ingress rule for audit logging delivery (optional)
- ingressFrom:
    identities:
      - group:databricks-vpc-sc-ingress-group@databricks.com
    sources:
      # Only required if you use audit logging delivery
      # See: https://docs.gcp.databricks.com/en/admin/account-settings/audit-log-delivery.html
      - resource: projects/85638097580
  ingressTo:
    operations:
      # Google Cloud Storage operations for audit log delivery
      - methodSelectors:
          - method: google.storage.objects.create
          - method: google.storage.objects.delete
          - method: google.storage.objects.get
          - method: google.storage.objects.list
          - method: google.storage.buckets.testIamPermissions
        serviceName: storage.googleapis.com
    resources:
      - projects/546577047680
      - projects/488622148875